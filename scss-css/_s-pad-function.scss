/*This simple function transforms all pixel units into "em" or "rem" units
    - here is how to use it: em(16) or rem(16); 
    - result should be 1em or 1 rem
    - the "$sbase" variable should be the same as your html font-size
    
    -Function /is for retina display picture.
        you should have a 1x and a 2x (double pixel size) picture
        The retina-image mixin is a helper to generate a retina background image and non-retina background image. The retina background image will output to a HiDPI media query. The mixin uses a _2x.png filename suffix by default.
        $filename will resolve a path to the image, e.g. "../../home-icon". 
        @retina-image($filename, $background-size, $extension*, $retina-filename*, $retina-suffix*, $asset-pipeline*)
        * = optional

        Argument Defaults

        $extension: png
        $retina-filename: null
        $retina-suffix: _2x
        $asset-pipeline: false 

*/

$asset-pipeline: false !default;


@function em($pxval, $sbase: 16) {
  @return ($pxval / $sbase) * 1em;
}

@function rem($pxval) {
   $sbase: 16;
  @return ($pxval / $sbase) * 1rem;
}

@mixin sretina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {
  @if $asset-pipeline {
    background-image: image-url("#{$filename}.#{$extension}");
  } @else {
    background-image:       url("#{$filename}.#{$extension}");
  }

  @include hidpi {
    @if $asset-pipeline {
      @if $retina-filename {
        background-image: image-url("#{$retina-filename}.#{$extension}");
      } @else {
        background-image: image-url("#{$filename}#{$retina-suffix}.#{$extension}");
      }
    } @else {
      @if $retina-filename {
        background-image: url("#{$retina-filename}.#{$extension}");
      } @else {
        background-image: url("#{$filename}#{$retina-suffix}.#{$extension}");
      }
    }

    background-size: $background-size;
  }
}
